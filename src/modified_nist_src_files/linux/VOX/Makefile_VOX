#modified-flag
# select parameter set (one of: VOX128 VOX192 VOX256)
PARAM ?= VOX128

CC=gcc
CFLAGS = -std=c99 -pedantic -Wall -Wextra -march=native -O3 -funroll-loops -DPARAM_SET_$(PARAM)
LIBS = -lcrypto

BUILD_DIR = .build

# Sources
HDR = $(wildcard *.h) fips202/fips202.h rng/rng.h
SRC = $(filter-out pqcsign.c, $(wildcard *.c)) fips202/fips202.c rng/rng.c
PQCSIGN_SRC = pqcsign.c
OBJ = $(patsubst %.c,$(BUILD_DIR)/%.o,$(SRC))
BUILD_DIRS_ALL = $(BUILD_DIR) $(BUILD_DIR)/fips202 $(BUILD_DIR)/rng

# Executables
APP = test/PQCgenKAT_sign test/vox_test pqcsign
#test/vox_test_solve

# Main targets
all: $(APP)

KAT: test/PQCgenKAT_sign
	./test/PQCgenKAT_sign

bench: test/vox_test
	./test/vox_test

pqcsign: $(BUILD_DIR)/pqcsign.o $(OBJ)
	$(CC) $(CFLAGS) -o $@ $^ $(LIBS)

clean:
	-rm -rf $(BUILD_DIR) $(APP)

.PHONY: all KAT bench clean

# Compilation rules
test/%: test/%.c $(OBJ)
	$(CC) -o $@ $^ $(CFLAGS) -I. -Irng/ $(LIBS)

$(BUILD_DIR)/%.o: %.c $(HDR) | $(BUILD_DIRS_ALL)
	$(CC) -o $@ $< $(CFLAGS) -c

$(BUILD_DIRS_ALL):
	mkdir -p $@

.SECONDARY: $(OBJ) $(PQCSIGN_OBJ)
